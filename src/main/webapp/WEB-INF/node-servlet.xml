<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:ws="http://www.springframework.org/schema/web-services"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-1.5.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="org.dataone.cn.rest.web.node"  >
        <context:include-filter type="regex" expression="org.dataone.cn.rest.web.node.NodeController"/>
        <context:exclude-filter type="regex" expression="org.dataone.cn.rest.web.node.NodeListRetrieval"/>
    </context:component-scan>
    

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="alwaysUseFullPath" value="true"/>
        <property name="urlDecode" value="false"/>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="alwaysUseFullPath" value="true"/>
        <property name="urlDecode" value="false"/>
        <property name="useDefaultSuffixPattern" value="false" />
    </bean>

	<!--  based on the type of return needed by the Accept header this will resolve a
	      response object formated either in JSON or XML.  CSV will be added later via XSLT or Jasper Reports
              THIS NEEDS MORE WORK: NEED TO SEPARATE OUT DEFAULT VIEWS AND DETERMINE
              WHICH IS THE DEFAULT VIEW AND WHICH ARE THE VIEWRESOLVERS.
              http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.html
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
	  <property name="order" value="1" />
	  <property name="defaultViews">
	    <list>
	      <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
	      <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" >
	      	<property name="contentType" value="text/json"/>
	      </bean>
	      <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
				<property name="modelKey" value="org.dataone.ns.core.objects.Response"/>
				<property name="marshaller">
					<ref bean="jibxMarshallerResponse"/>
				</property>
	      </bean>
	      <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
				<property name="modelKey" value="org.dataone.ns.core.objects.Response"/>
				<property name="contentType" value="text/xml" />
				<property name="marshaller">
					<ref bean="jibxMarshallerResponse"/>
				</property>
	      </bean>
	    </list>
	  </property>
	  <property name="ignoreAcceptHeader" value="false" />
	</bean>
	-->
    <bean id="xmlViewResolverObject" class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="order" value="1"/>
        <property name="location" value="/WEB-INF/config/objectViews.xml"/>
    </bean>

</beans>
