<?xml version="1.0" encoding="UTF-8"?>
<hazelcast xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-
basic.xsd"
  xmlns="http://www.hazelcast.com/schema/config"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <!--
      Temporary until the hzNodes moves to metacat.  this is only used
      to configure Node controller to talk with hzNodes
    -->
  <group>
    <name>devProcess</name>
    <password>dataone</password>
  </group>

  <network>
    <port auto-increment="true">5802</port>
    <join>
      <multicast enabled="false">
        <multicast-group>224.2.2.3</multicast-group>
        <multicast-port>54327</multicast-port>
      </multicast>
      <tcp-ip enabled="true">
        <interface>127.0.0.1</interface>
      </tcp-ip>
    </join>
    </network>
  <executor-service>
    <core-pool-size>16</core-pool-size>
    <max-pool-size>64</max-pool-size>
    <keep-alive-seconds>60</keep-alive-seconds>
  </executor-service>

  <map name="hzNodes">

    <backup-count>0</backup-count>

    <eviction-policy>NONE</eviction-policy>

    <max-size policy="cluster_wide_map_size">0</max-size>

    <eviction-percentage>25</eviction-percentage>

    <merge-policy>hz.LATEST_UPDATE</merge-policy>

    <map-store enabled="true">
      <class-name>org.dataone.cn.hazelcast.HazelcastLdapStore</class-name>
      <write-delay-seconds>0</write-delay-seconds>
    </map-store>
  </map>
    <map name="hzSystemMetadata">
    <!--
      Number of backups. If 1 is set as the backup-count for example,
      then all entries of the map will be copied to another JVM for
      fail-safety. Valid numbers are 0 (no backup), 1, 2, 3.
    -->
    <backup-count>0</backup-count>
    <!--
      Valid values are:
      NONE (no eviction),
      LRU (Least Recently Used),
      LFU (Least Frequently Used).
      NONE is the default.
    -->
    <eviction-policy>NONE</eviction-policy>
    <!--
      Maximum size of the map. When max size is reached,
      map is evicted based on the policy defined.
      Any integer between 0 and Integer.MAX_VALUE. 0 means
      Integer.MAX_VALUE. Default is 0.
    -->
    <max-size policy="cluster_wide_map_size">0</max-size>
    <!--
      When max. size is reached, specified percentage of
      the map will be evicted. Any integer between 0 and 100.
      If 25 is set for example, 25% of the entries will
      get evicted.
    -->
    <eviction-percentage>25</eviction-percentage>

    <!--
      While recovering from split-brain (network partitioning),
      map entries in the small cluster will merge into the bigger cluster
      based on the policy set here. When an entry merge into the
      cluster, there might an existing entry with the same key already.
      Values of these entries might be different for that same key.
      Which value should be set for the key? Conflict is resolved by
      the policy set here. Default policy is hz.ADD_NEW_ENTRY

      There are built-in merge policies such as
      hz.NO_MERGE    ; no entry will merge.
      hz.ADD_NEW_ENTRY ; entry will be added if the merging entry's key
                 doesn't exist in the cluster.
      hz.HIGHER_HITS   ; entry with the higher hits wins.
      hz.LATEST_UPDATE ; entry with the latest update wins.
    -->
    <merge-policy>hz.ADD_NEW_ENTRY</merge-policy>

  </map>
</hazelcast>

